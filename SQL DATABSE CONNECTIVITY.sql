CREATE DATABASE TechShop;
USE TechShop;

CREATE TABLE CUSTOMERS (
    CUSTOMERID INT AUTO_INCREMENT PRIMARY KEY,
    FIRSTNAME VARCHAR(50) NOT NULL,
    LASTNAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(100) UNIQUE NOT NULL,
    PHONE VARCHAR(15),
    ADDRESS VARCHAR(255)
);

CREATE TABLE PRODUCTS (
    PRODUCTID INT AUTO_INCREMENT PRIMARY KEY,
    PRODUCTNAME VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    PRICE DECIMAL(10, 2) NOT NULL,
    CATEGORY VARCHAR(50) 
);

CREATE TABLE ORDERS (
    ORDERID INT AUTO_INCREMENT PRIMARY KEY,
    CUSTOMERID INT,
    ORDERDATE DATE NOT NULL,
    TOTALAMOUNT DECIMAL(10, 2) NOT NULL,
    STATUS VARCHAR(20) DEFAULT 'PENDING', 
    FOREIGN KEY (CUSTOMERID) REFERENCES CUSTOMERS(CUSTOMERID)
);


CREATE TABLE ORDERDETAILS (
    ORDERDETAILID INT AUTO_INCREMENT PRIMARY KEY,
    ORDERID INT,
    PRODUCTID INT,
    QUANTITY INT NOT NULL,
    FOREIGN KEY (ORDERID) REFERENCES ORDERS(ORDERID),
    FOREIGN KEY (PRODUCTID) REFERENCES PRODUCTS(PRODUCTID)
);

CREATE TABLE INVENTORY (
    INVENTORYID INT AUTO_INCREMENT PRIMARY KEY,
    PRODUCTID INT,
    QUANTITYINSTOCK INT NOT NULL,
    LASTSTOCKUPDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (PRODUCTID) REFERENCES PRODUCTS(PRODUCTID)
);

INSERT INTO CUSTOMERS (FIRSTNAME, LASTNAME, EMAIL, PHONE, ADDRESS) VALUES
('RAJINIKANTH', 'SHIVAJI', 'rajini.shivaji2030@example.com', '9876543210', '123 CHENNAI ST'),
('KAMAL', 'HASSAN', 'kamal.hassan2030@example.com', '8765432109', '456 CHENNAI ST'),
('VIJAY', 'JOSEPH', 'vijay.joseph2030@example.com', '7654321098', '789 CHENNAI ST'),
('AJITH', 'KUMAR', 'ajith.kumar2030@example.com', '6543210987', '101 CHENNAI ST'),
('SURIYA', 'SIVAKUMAR', 'suriya.sivakumar2030@example.com', '5432109876', '202 CHENNAI ST'),
('NAYANTHARA', 'DIANA', 'nayan.diana2030@example.com', '4321098765', '303 CHENNAI ST'),
('TRISHA', 'KRISHNAN', 'trisha.krishnan2030@example.com', '3210987654', '404 CHENNAI ST'),
('SAMANTHA', 'RUTH', 'samantha.ruth2030@example.com', '2109876543', '505 CHENNAI ST'),
('KEERTHY', 'SURESH', 'keerthy.suresh2030@example.com', '1098765432', '606 CHENNAI ST'),
('POOJA', 'HEGDE', 'pooja.hegde2030@example.com', '0987654321', '707 CHENNAI ST');

INSERT INTO PRODUCTS (PRODUCTNAME, DESCRIPTION, PRICE, CATEGORY) VALUES
('LAPTOP', 'HIGH-PERFORMANCE LAPTOP', 1200.00, 'ELECTRONICS'),
('SMARTPHONE', 'LATEST MODEL SMARTPHONE', 800.00, 'ELECTRONICS'),
('TABLET', 'LIGHTWEIGHT AND PORTABLE', 500.00, 'ELECTRONICS'),
('SMARTWATCH', 'FITNESS AND HEALTH TRACKER', 300.00, 'ELECTRONICS'),
('HEADPHONES', 'NOISE-CANCELLING HEADPHONES', 200.00, 'ELECTRONICS'),
('CAMERA', 'DSLR CAMERA', 1000.00, 'ELECTRONICS'),
('PRINTER', 'WIRELESS PRINTER', 150.00, 'ELECTRONICS'),
('MONITOR', '27-INCH 4K MONITOR', 400.00, 'ELECTRONICS'),
('KEYBOARD', 'MECHANICAL KEYBOARD', 100.00, 'ELECTRONICS'),
('MOUSE', 'WIRELESS MOUSE', 50.00, 'ELECTRONICS');


INSERT INTO ORDERS (CUSTOMERID, ORDERDATE, TOTALAMOUNT, STATUS) VALUES
(1, '2030-01-01', 1200.00, 'SHIPPED'),
(2, '2030-01-02', 800.00, 'PENDING'),
(3, '2030-01-03', 500.00, 'SHIPPED'),
(4, '2030-01-04', 300.00, 'PENDING'),
(5, '2030-01-05', 200.00, 'SHIPPED'),
(6, '2030-01-06', 1000.00, 'PENDING'),
(7, '2030-01-07', 150.00, 'SHIPPED'),
(8, '2030-01-08', 400.00, 'PENDING'),
(9, '2030-01-09', 100.00, 'SHIPPED'),
(10, '2030-01-10', 50.00, 'PENDING');


INSERT INTO ORDERDETAILS (ORDERID, PRODUCTID, QUANTITY) VALUES
(1, 1, 1),
(2, 2, 1),
(3, 3, 1),
(4, 4, 1),
(5, 5, 1),
(6, 6, 1),
(7, 7, 1),
(8, 8, 1),
(9, 9, 1),
(10, 10, 1);


INSERT INTO INVENTORY (PRODUCTID, QUANTITYINSTOCK) VALUES
(1, 10),
(2, 15),
(3, 20),
(4, 25),
(5, 30),
(6, 35),
(7, 40),
(8, 45),
(9, 50),
(10, 55);

//TASK2 (SQL QUERIES)

SELECT FIRSTNAME, LASTNAME, EMAIL 
FROM CUSTOMERS;

SELECT ORDERS.ORDERID, ORDERS.ORDERDATE, CUSTOMERS.FIRSTNAME, CUSTOMERS.LASTNAME
FROM ORDERS
JOIN CUSTOMERS ON ORDERS.CUSTOMERID = CUSTOMERS.CUSTOMERID;

INSERT INTO CUSTOMERS (FIRSTNAME, LASTNAME, EMAIL, PHONE, ADDRESS)
VALUES ('DHANUSH', 'VENKATESH', 'dhanush.venkatesh2030@example.com', '9876543211', '808 CHENNAI ST');

UPDATE PRODUCTS
SET PRICE = PRICE * 1.10
WHERE PRODUCTID > 0; 

DELETE FROM ORDERDETAILS 
WHERE ORDERID = 1;

DELETE FROM ORDERS 
WHERE ORDERID = 1;

INSERT INTO ORDERS (CUSTOMERID, ORDERDATE, TOTALAMOUNT, STATUS)
VALUES (1, '2030-01-15', 1500.00, 'PENDING');

UPDATE CUSTOMERS
SET EMAIL = 'dhanush.new2030@example.com', ADDRESS = '909 CHENNAI ST'
WHERE CUSTOMERID = 11;

UPDATE ORDERS
JOIN (
    SELECT ORDERID, SUM(QUANTITY * PRICE) AS TOTAL
    FROM ORDERDETAILS
    JOIN PRODUCTS ON ORDERDETAILS.PRODUCTID = PRODUCTS.PRODUCTID
    GROUP BY ORDERID
) AS SUBQUERY ON ORDERS.ORDERID = SUBQUERY.ORDERID
SET ORDERS.TOTALAMOUNT = SUBQUERY.TOTAL;

DELETE FROM ORDERS 
WHERE CUSTOMERID = 11;

DELETE FROM ORDERDETAILS 
WHERE ORDERID IN (SELECT ORDERID FROM ORDERS WHERE CUSTOMERID = 11);

INSERT INTO PRODUCTS (PRODUCTNAME, DESCRIPTION, PRICE, CATEGORY)
VALUES ('SMART GLASSES', 'AUGMENTED REALITY GLASSES', 2000.00, 'ELECTRONICS');

UPDATE ORDERS
SET STATUS = 'SHIPPED'
WHERE ORDERID = 1;

ALTER TABLE CUSTOMERS 
ADD COLUMN TOTALORDERS INT DEFAULT 0;

ALTER TABLE CUSTOMERS
ADD COLUMN TOTALORDERS INT DEFAULT 0;

UPDATE CUSTOMERS
SET TOTALORDERS = (
    SELECT COUNT(*)
    FROM ORDERS
    WHERE ORDERS.CUSTOMERID = CUSTOMERS.CUSTOMERID
)
WHERE CUSTOMERID > 0; 


// TASK3 

SELECT ORDERS.ORDERID, ORDERS.ORDERDATE, CUSTOMERS.FIRSTNAME, CUSTOMERS.LASTNAME
FROM ORDERS
JOIN CUSTOMERS ON ORDERS.CUSTOMERID = CUSTOMERS.CUSTOMERID;

SELECT PRODUCTS.PRODUCTNAME, SUM(ORDERDETAILS.QUANTITY * PRODUCTS.PRICE) AS TOTALREVENUE
FROM ORDERDETAILS
JOIN PRODUCTS ON ORDERDETAILS.PRODUCTID = PRODUCTS.PRODUCTID
GROUP BY PRODUCTS.PRODUCTNAME;

SELECT DISTINCT CUSTOMERS.FIRSTNAME, CUSTOMERS.LASTNAME, CUSTOMERS.EMAIL
FROM CUSTOMERS
JOIN ORDERS ON CUSTOMERS.CUSTOMERID = ORDERS.CUSTOMERID;

SELECT PRODUCTS.PRODUCTNAME, SUM(ORDERDETAILS.QUANTITY) AS TOTALQUANTITY
FROM ORDERDETAILS
JOIN PRODUCTS ON ORDERDETAILS.PRODUCTID = PRODUCTS.PRODUCTID
GROUP BY PRODUCTS.PRODUCTNAME
ORDER BY TOTALQUANTITY DESC
LIMIT 1;

SELECT PRODUCTNAME, CATEGORY 
FROM PRODUCTS;

SELECT CUSTOMERS.FIRSTNAME, CUSTOMERS.LASTNAME, AVG(ORDERS.TOTALAMOUNT) AS AVGORDERVALUE
FROM CUSTOMERS
JOIN ORDERS ON CUSTOMERS.CUSTOMERID = ORDERS.CUSTOMERID
GROUP BY CUSTOMERS.CUSTOMERID;

SELECT ORDERS.ORDERID, CUSTOMERS.FIRSTNAME, CUSTOMERS.LASTNAME, ORDERS.TOTALAMOUNT
FROM ORDERS
JOIN CUSTOMERS ON ORDERS.CUSTOMERID = CUSTOMERS.CUSTOMERID
ORDER BY ORDERS.TOTALAMOUNT DESC
LIMIT 1;

SELECT PRODUCTS.PRODUCTNAME, COUNT(ORDERDETAILS.ORDERDETAILID) AS TIMESORDERED
FROM PRODUCTS
LEFT JOIN ORDERDETAILS ON PRODUCTS.PRODUCTID = ORDERDETAILS.PRODUCTID
GROUP BY PRODUCTS.PRODUCTNAME;

SELECT CUSTOMERS.FIRSTNAME, CUSTOMERS.LASTNAME
FROM CUSTOMERS
JOIN ORDERS ON CUSTOMERS.CUSTOMERID = ORDERS.CUSTOMERID
JOIN ORDERDETAILS ON ORDERS.ORDERID = ORDERDETAILS.ORDERID
JOIN PRODUCTS ON ORDERDETAILS.PRODUCTID = PRODUCTS.PRODUCTID
WHERE PRODUCTS.PRODUCTNAME = 'LAPTOP';

SELECT SUM(TOTALAMOUNT) AS TOTALREVENUE
FROM ORDERS
WHERE ORDERDATE BETWEEN '2030-01-01' AND '2030-12-31';

//TASK 4

SELECT FIRSTNAME, LASTNAME
FROM CUSTOMERS
WHERE CUSTOMERID NOT IN (SELECT DISTINCT CUSTOMERID FROM ORDERS);

SELECT COUNT(*) AS TOTALPRODUCTS
FROM PRODUCTS;

SELECT SUM(TOTALAMOUNT) AS TOTALREVENUE
FROM ORDERS;

SELECT AVG(ORDERDETAILS.QUANTITY) AS AVGQUANTITY
FROM ORDERDETAILS
JOIN PRODUCTS ON ORDERDETAILS.PRODUCTID = PRODUCTS.PRODUCTID
WHERE PRODUCTS.CATEGORY = 'ELECTRONICS';

SELECT SUM(ORDERS.TOTALAMOUNT) AS TOTALREVENUE
FROM ORDERS
WHERE CUSTOMERID = 1;

SELECT CUSTOMERS.FIRSTNAME, CUSTOMERS.LASTNAME, COUNT(ORDERS.ORDERID) AS ORDERCOUNT
FROM CUSTOMERS
JOIN ORDERS ON CUSTOMERS.CUSTOMERID = ORDERS.CUSTOMERID
GROUP BY CUSTOMERS.CUSTOMERID
ORDER BY ORDERCOUNT DESC
LIMIT 1;

SELECT PRODUCTS.CATEGORY, SUM(ORDERDETAILS.QUANTITY) AS TOTALQUANTITY
FROM ORDERDETAILS
JOIN PRODUCTS ON ORDERDETAILS.PRODUCTID = PRODUCTS.PRODUCTID
GROUP BY PRODUCTS.CATEGORY
ORDER BY TOTALQUANTITY DESC
LIMIT 1;

SELECT CUSTOMERS.FIRSTNAME, CUSTOMERS.LASTNAME, SUM(ORDERS.TOTALAMOUNT) AS TOTALSPENT
FROM CUSTOMERS
JOIN ORDERS ON CUSTOMERS.CUSTOMERID = ORDERS.CUSTOMERID
GROUP BY CUSTOMERS.CUSTOMERID
ORDER BY TOTALSPENT DESC
LIMIT 1;

SELECT AVG(TOTALAMOUNT) AS AVGORDERVALUE
FROM ORDERS;

SELECT CUSTOMERS.FIRSTNAME, CUSTOMERS.LASTNAME, COUNT(ORDERS.ORDERID) AS ORDERCOUNT
FROM CUSTOMERS
LEFT JOIN ORDERS ON CUSTOMERS.CUSTOMERID = ORDERS.CUSTOMERID
GROUP BY CUSTOMERS.CUSTOMERID;


USE TechShop;

SHOW TABLES;

SELECT * FROM CUSTOMERS;
SELECT * FROM ORDERS;
SELECT * FROM ORDERDETAILS;
SELECT * FROM PRODUCTS;


ALTER TABLE Products ADD COLUMN stock INT;
SET SQL_SAFE_UPDATES = 0;

UPDATE Products SET stock = 1000;

ALTER TABLE orders ADD COLUMN payment_method VARCHAR(50) NULL;

ALTER TABLE orders ADD COLUMN amount_paid VARCHAR(50) NULL;


ALTER TABLE Products DROP COLUMN category;

ALTER TABLE orders RENAME COLUMN payment_method TO PaymentMethod;

ALTER TABLE orders RENAME COLUMN amount_paid TO amountpaid;

































